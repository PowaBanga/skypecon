
// Dummy mixin to perform the loop for icon-specific styles.
.loop(@indx: 1) when (@indx < length(@emoticons)) {

  @itr-key:            extract(@emoticons, @indx);
  @itr-height-anim:    (extract(@emoticons, @indx + 1) * @width);
  @itr-height-anim-2x: (@itr-height-anim * @retina-factor);

  @itr-animation-steps: (@itr-height-anim / @height);

  // Icon-specific durations for the different speeds.
  .sc.sc-@{itr-key} {
    -webkit-animation-duration: unit((@itr-animation-steps / @animation-duration-fps), s);
    animation-duration: unit((@itr-animation-steps / @animation-duration-fps), s);

    &.sc-slow {
      -webkit-animation-duration: unit((@itr-animation-steps / @animation-duration-fps-slow), s);
      animation-duration: unit((@itr-animation-steps / @animation-duration-fps-slow), s);
    }

    &.sc-fast {
      -webkit-animation-duration: unit((@itr-animation-steps / @animation-duration-fps-fast), s);
      animation-duration: unit((@itr-animation-steps / @animation-duration-fps-fast), s);
    }

    // Icon-specific animation information.
    &,
    &.sc-hover:hover {
      -webkit-animation-timing-function: steps(@itr-animation-steps);
      animation-timing-function: steps(@itr-animation-steps);

      -webkit-animation-name: ~'@{animation-name-prefix}@{itr-key}';
      animation-name: ~'@{animation-name-prefix}@{itr-key}';

      background-image: ~"url(@{path}@{itr-key}@{basename-suffix-frames-sprite}.png)";

      &.sc-2x {
        -webkit-animation-name: ~'@{animation-name-prefix}@{itr-key}@{animation-name-retina}';
        animation-name: ~'@{animation-name-prefix}@{itr-key}@{animation-name-retina}';

        background-image: ~"url(@{path}@{itr-key}@{basename-suffix-frames-sprite}@{basename-retina}.png)";
      }
    }

    // Icon-specific sprite offset for non-animation mode.
    // The background image is set outside the loop (below) since it isn't specific to each icon.
    &.sc-still,
    &.sc-hover {
      background-position: (-1 * unit(((@indx - 1) * @width / @retina-factor), px)) 0;

      &.sc-2x {
      background-position: (-1 * unit(((@indx - 1) * @width), px)) 0;
      }
    }
  }

  // Icon-specific keyframe functions.
  @-webkit-keyframes ~'@{animation-name-prefix}@{itr-key}@{animation-name-retina}' {
    0% { background-position: 0 0; }
    100% { background-position: 0 (-1 * unit(@itr-height-anim-2x, px)); }
  }
  @keyframes ~'@{animation-name-prefix}@{itr-key}@{animation-name-retina}' {
    0% { background-position: 0 0; }
    100% { background-position: 0 (-1 * unit(@itr-height-anim-2x, px)); }
  }

  @-webkit-keyframes ~'@{animation-name-prefix}@{itr-key}' {
    0% { background-position: 0 0; }
    100% { background-position: 0 (-1 * unit(@itr-height-anim, px)); }
  }
  @keyframes ~'@{animation-name-prefix}@{itr-key}' {
    0% { background-position: 0 0; }
    100% { background-position: 0 (-1 * unit(@itr-height-anim, px)); }
  }

  // Repeat the loop.
  .loop(@indx + @list-interval);
}

// Initialize the loop call.
.loop();

// Since we now use a sprite for when in non-animation mode, we override the
// background-image outside the loop since only the position is icon-specific.
.sc {
  &.sc-still,
  &.sc-hover {
    background-image: %(~"url(%s%s.png)", @path, @basename-stills-sprite);

    &.sc-2x {
      background-image: %(~"url(%s%s%s.png)", @path, @basename-stills-sprite, @basename-retina);
    }
  }
}

